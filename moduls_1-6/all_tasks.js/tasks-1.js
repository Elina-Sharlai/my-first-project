//**1. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —â–æ –ø–µ—Ä—à–∏–º —Å–∏–º–≤–æ–ª–æ–º —î –ª—ñ—Ç–µ—Ä–∞ –ê
// –Ø–∫—â–æ —Ç–∞–∫, –≤–∏–≤–µ–¥—ñ—Ç—å "—Ç–∞–∫", —è–∫—â–æ –Ω—ñ, –≤–∏–≤–µ–¥—ñ—Ç—å "–Ω—ñ" */
// const str = "absde";
// if (str[0]==='a') {
//     console.log('—Ç–∞–∫');
    
// } else {
//     console.log('–Ω—ñ');
    
// }

// console.log(str.startsWith('a') ? '—Ç–∞–∫' : '–Ω—ñ');

/**2. –ù–∞–ø–∏—Å–∞—Ç–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –≤–≤–µ–¥–µ–Ω–µ —á–∏—Å–ª–æ —á–µ—Ä–µ–∑ ... –ø–æ—Ç—Ä–∞–ø–ª—è—î –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω
// –≤—ñ–¥ 55 –¥–æ 99 –≤–∫–ª—é—á–Ω–æ
// —è–∫—â–æ —Ç–∞–∫, –≤–∏–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å "–ß–∏—Å–ª–æ –ø–æ—Ç—Ä–∞–ø–ª—è—î –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω"
// –Ø–∫—â–æ –Ω—ñ, –≤–∏–≤–µ—Å—Ç–∏ "–ß–∏—Å–ª–æ –Ω–µ –ø–æ—Ç—Ä–∞–ø–ª—è—î –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω" */
// const num = 55;
// if (num >=55 && num <=99 ) {
//     console.log("–ß–∏—Å–ª–æ –ø–æ—Ç—Ä–∞–ø–ª—è—î –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω");
// } else {
//     console.log("–ß–∏—Å–ª–æ –Ω–µ –ø–æ—Ç—Ä–∞–ø–ª—è—î –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω");
// }
// console.log(num >=55 && num <=99 ? '–ß–∏—Å–ª–æ –ø–æ—Ç—Ä–∞–ø–ª—è—î –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω' : '–ß–∏—Å–ª–æ –Ω–µ –ø–æ—Ç—Ä–∞–ø–ª—è—î –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω');

/**3. –Ñ —Ç—Ä–∏ –≤—ñ–∫–æ–≤—ñ –≥—Ä—É–ø–∏ - –¥—ñ—Ç–∏ (0-16), –¥–æ—Ä–æ—Å–ª—ñ (17-60),  –ø–µ–Ω—Å—ñ–æ–Ω–µ—Ä–∏ (61-100)
 * –í–∏–∑–Ω–∞—á, –¥–æ —è–∫–æ—ó –≤—ñ–∫–æ–≤–æ—ó –≥—Ä—É–ø–∏ –Ω–∞–ª–µ–∂–∏—Ç—å –ú–∞–∫—Å–∏–º, —è–∫—â–æ –π–æ–≥–æ –≤—ñ–∫ 55 —Ä–æ–∫—ñ–≤. –ù–∞–∑–≤—É –≥—Ä—É–ø–∏ –≤–∏–≤–µ—Å—Ç–∏ –Ω–∞ –µ–∫—Ä–∞–Ω.
*/
// const ageMaksim = 101;
// if (ageMaksim >=0 && ageMaksim <=16) {
//    console.log("–¥—ñ—Ç–∏");
    
// }
// else if (ageMaksim >=17 && ageMaksim <=60) {
//    console.log("–¥–æ—Ä–æ—Å–ª—ñ");
    
// }
// else if (ageMaksim >=61 && ageMaksim <=100){
//     console.log("–ø–µ–Ω—Å—ñ–æ–Ω–µ—Ä–∏");
// }
// else {
//     console.log("–¢–∏ —Å–∫–æ—Ä–æ –Ω–∞—Ä–æ–¥–∏—à—Å—è –∑–Ω–æ–≤ -:)");
    
// }

/**4. –ù–∞–ø–∏—à—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —á–∏—Å–ª–∞ –≤—ñ–¥ max –¥–æ min –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º
 * –î–æ–¥–∞—Ç–∏ —É—Å—ñ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ min –¥–æ max.
*/
// const min = 110;
// const max = 120;
// let sum =0;
// for (let i = max; i > min; i--) {
//    console.log(i);
//     if (i % 2 !== 0) {
//     continue;
//     }
//     sum += i;
//     console.log("–ü–∞—Ä–Ω—ñ —á–∏—Å–ª–∞", i);
// }
// console.log(sum);

/**5. –ó–∞–ø–∏—Ç–∞–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ, —è–∫–∏–π —ñ–∑ –Ω–∞–ø–æ—ó–≤ –≤—ñ–Ω –±–∞–∂–∞—î –ø—Ä–∏–¥–±–∞—Ç–∏ - 
 * "–ß–∞–π", "–ö–∞–≤—É", –∞–±–æ "–°—ñ–∫".
 * –ó–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –Ω–∞–ø–æ—é –æ–≥–æ–ª–æ—Å–∏ —Å—É–º—É –¥–æ —Å–ø–ª–∞—Ç–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π switch.
*/
// const drink = prompt("–û–±–µ—Ä—ñ—Ç—å –Ω–∞–ø—ñ–π");
// function orderDrink(drink) {
//     let price = 0;
//     switch (drink) {
//         case "–ö–∞–≤–∞":
//             price = 60;
//             break
//         case "–ß–∞–π":
//             price = 30;
//             break
//         case "–°—ñ–∫":
//             price = 50;
//             break
//         default:
//             alert("Doesn't exist")
//             break
//     }
//     return alert(`sum: ${price}–≥—Ä–Ω`)
    
// }
// orderDrink(drink);

/** –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
 * –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
 * –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
 */
// const values = "8 11";

// function calculateSquare(data) {
//     if (typeof data !== "string")
    
//     {
//         console.warn("Wrong Data Type");
//         return;
//     }
//     const squareParams = data.split(" ");
//     console.log("üöÄ ~ calculateSquare ~ squareParams:", squareParams);
//     const square = squareParams[0] * squareParams[1];
//     console.log("üöÄ ~ calculateSquare ~ square:", square);
    
// }

// calculateSquare(values);

/** –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
 * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
 * —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞ : –∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞.
 * –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 */

// const fruits = ["üçá", "üçä", "üçå", "üçç", "ü•ù"];
// for (let i = 0; i < fruits.length; i++) {
//     const element = fruits[i];
//     console.log(`${i + 1} : ${element}`);
    
    
// }

/** –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î —Å—É–º—É –≤—Å—ñ—Ö —á–∏—Å–µ–ª —É –º–∞—Å–∏–≤—ñ */

// const numbers = [1, 5, 8, 9, 12, 4, 15, 27, 30, 18, 14];

// function calculateEvenSum(numbers) {
//     let total = 0;
//  for (const number of numbers) {
//      console.log("üöÄ ~ calculateEvenSum ~ number:", number);
//     if (number % 2 ===0 ) {
//         total += number;
//     }
//     }
//     return total;
// }

// const res1 = calculateEvenSum(numbers);
// console.log("üöÄ ~ res1:", res1);

/** –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
 * –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,—Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏.
 * –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å.
 * –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */

// const names = "Jacob,William,Solomon,Artemis";
// const phones = "987456321,321456987,753159654,321789654";

// function showContacts(names, phones) {
//     let title = ` # |  Contact   |   Phone   \n`;
//     const namesArr = names.split(",");
//     const phonesArr = phones.split(",");

//     for (let index = 0; index < namesArr.length; index += 1) {
//         const name = namesArr[index];
//         const phone = phonesArr[index];
//         title += `üì± ${index + 1} | ${name} | ${phone} \n`;
//     }
//     return title;
// }
// const res2 = showContacts(names, phones);
// console.table("üöÄ ~ res2:", res2);

/** –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ
 * –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±—ñ–ª—É.
 * –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
 */

// const string = "Welcome to the future";
// function showWords(string) {
//     const arr = string.split(" ")
//     return arr.slice(1, arr.length - 1).join (" ");
// }

// const res3 = showWords(string);
// console.log("üöÄ ~ res3:", res3);

/** –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. 
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
 */

const values = [2, 17, 94, 1, 23, 37];
let min;


function findMinNum(numbers) {
    let minNum = numbers[0];
    for (let i = 1; i < numbers.length; i++) {
        const currentNnumber = numbers[i];
       
        if (currentNnumber < minNum) {
            minNum = currentNnumber;
        }
    }
    return minNum;
}

min = findMinNum(values);
console.log("üöÄ ~ min:", min);

//  –ê–±–æ —Ç–∞–∫–µ —Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ - —Ä–æ–∑–ø–∏–ª–µ–Ω–Ω—è –º–∞—Å–∏–≤—É –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º spread

console.log("üöÄ ~ Math.min(...values):", Math.min(...values));

/** */

function getCommonElements(array1, array2) {
    const newArray = [];
    for (let i = 0; i < array1.length; i++) {
        if (array2.includes(array1[i])) {
            newArray.push(array1[i]);
        }
        
    }
    console.log(newArray);
}

getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40]);
getCommonElements([1, 2, 3], [2, 1, 17, 19]);