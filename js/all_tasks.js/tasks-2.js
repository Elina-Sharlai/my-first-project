/**
 * –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é add –¥–ª—è —Å–∫–ª–∞–¥–∞–Ω–Ω—è –¥–æ–≤—ñ–ª—å–Ω–æ—ó
 * –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ (—á–∏—Å–µ–ª) –Ω–∞ function expression
 */

// const add = function () {
//   const args = Array.from(arguments);
//   let total = 0;

//   for (const arg of args) {
//     total += arg;
//   }

//   return total;
// };

// console.log(add(1, 2, 3));
// console.log(add(1, 2, 4, 5, 6));

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calAverage() —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
 * –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è. –£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
 * –±—É–¥—É—Ç—å –ª–∏—à–µ —á–∏—Å–ª–∞–º–∏.
 */

// function calAverage() {
//     const args = Array.from(arguments);
//     let total = 0;

//     for (const arg of args) {
//         total += arg;
//     }

//     return total / args.length;
// }

// console.log(calAverage(1, 2, 3, 4)); // 2.5;
// console.log(calAverage(14, 8, 2)); // 8;
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2;

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
 * —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
 * —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 * –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 *
 * –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
 * —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
 */


// function logItems(items) {
//    for (let i = 0; i < items.length; i += 1) {
//     const item = items[i];
//     console.log(`${i+1} - ${item}`);
//        }
// }

// –Ü–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ:

// function logItems() {
//     const args = Array.from(arguments[0]);
//     for (let i = 0; i < args.length; i += 1) {
//     const item = args[i];
//     console.log(`${i+1} - ${item}`);
//        }
// }

// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å
 * —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 * names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
 * –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
 * –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */

// function printInfo(names, phones) {

//     const namesArr = names.split(',');
//     const phonesArr = phones.split(',');

//     for (let i = 0; i < names.length; i++) {

//         const name = namesArr[i];
//         const phone = phonesArr[i];

//         console.log(`Contact ${name}\nPhone number: ${phone}`);
//             }
    
// }

// printInfo("Jacob,William,Solomon,Artemis","89001234567,89001112233,890055566377,890055566300");

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
 * minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω
 * —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
 */

// console.log("hours", );
// console.log("minutes", 70 % 60);

// function formatTime(minutes) {
//     const hours = Math.trunc(minutes / 60);
//     minutes = minutes % 60;
    // console.log(hours, minutes);
    
//     return `${normalizeDigits(hours)}:${normalizeDigits(minutes)}`;

// }

// function normalizeDigits(number) {
//     return String(number).padStart(2, "0");
// }

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"
// console.log(formatTime(360)); // "06:00"

// "–§—É–Ω–∫—Ü—ñ—è checkStorage(storage, item) –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:

// storage - –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤, —â–æ –æ–ø–∏—Å—É—î –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç–æ–≤–∞—Ä–∏ –Ω–∞ —Å–∫–ª–∞–¥—ñ
// item - —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é —Ç–æ–≤–∞—Ä–∞, –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —è–∫–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏
// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è–ª–∞, —á–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ–π —Ç–∞–∫–∏–π —Ç–æ–≤–∞—Ä –≤ –º–∞—Å–∏–≤—ñ storage —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞:

// —Ä—è–¥–æ–∫ ""<item> is available to order!"", –¥–µ item - —Ü–µ –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä–∞, —è–∫—â–æ —Ç–æ–≤–∞—Ä –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ
// —Ä—è–¥–æ–∫ ""Sorry! We are out of stock!"", —è–∫—â–æ —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–º–∞—î –≤ –º–∞—Å–∏–≤—ñ
// –ó—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± –ø–æ—à—É–∫ –∑–∞ —ñ–º'—è–º —Ç–æ–≤–∞—Ä—É –±—É–≤ –Ω–µ–∑–∞–ª–µ–∂–Ω–∏–π –≤—ñ–¥ —Ä–µ–≥—ñ—Å—Ç—Ä—É, 
// —Ç–æ–±—Ç–æ –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ ""plum"" —ñ ""pLuM"" –º–∞—é—Ç—å –±—É—Ç–∏ –∑–Ω–∞–π–¥–µ–Ω—ñ —É –º–∞—Å–∏–≤—ñ[""apple"", ""plum"", ""pear""]. 

function checkStorage(storage, item) {
    const lowerCaseItem = item.toLowerCase();
    
    for (const item of storage) {
      
        if (item.toLowerCase() === lowerCaseItem) {
            return `${lowerCaseItem} is available to order!`;
        }
        
    }
return "Sorry! We are out of stock!";
}
    

    const res1 = checkStorage(["apple", "plum", "pear"], "pLuM");
console.log("üöÄ ~ res1:", res1);

    

    // –Ü–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ

//   if (storage.map(product => product.toLowerCase()).includes(lowerCaseItem)) {
//     return `${lowerCaseItem} is available to order!`;
//   } else {
//     return "Sorry! We are out of stock!";
//   }
// }







